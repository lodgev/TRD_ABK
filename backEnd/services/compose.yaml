services:

  recommender-db:
    image: postgres
    env_file:
      - ./recommender-db/.env
    volumes:
      - ./recommender-db/sql:/docker-entrypoint-initdb.d
    networks:
      - tdl

  tasks-db:
    image: postgres
    env_file:
      - ./tasks-db/.env
    volumes:
      - ./tasks-db/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tdl

  user-db:
    image: postgres
    env_file:
      - ./user-db/.env
    volumes:
      - ./user-db/sql:/docker-entrypoint-initdb.d
    networks:
      - tdl

  match-db:
    image: postgres
    env_file:
      - ./match-db/.env
    volumes:
      - ./match-db/sql:/docker-entrypoint-initdb.d
    networks:
      - tdl

  adminer:
    container_name: adminer
    image: adminer
    env_file:
      - ./adminer/.env
    ports:
      - 8080:8080
    networks:
      - tdl

  message-broker:
    image: rabbitmq:management
    container_name: message-broker
    env_file:
      - ./message-broker/.env
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./message-broker/data:/var/lib/rabbitmq
      - ./message-broker/log:/var/log/rabbitmq
      - ./message-broker/rabbitmq_data:/var/lib/rabbitmq
    networks:
      - tdl

  gateway-service:
    build:
      context: gateway-service
      dockerfile: Dockerfile
    volumes:
      - ./gateway-service:/app
    ports:
      - 3000:80
    env_file:
      - ./gateway-service/.env
    networks:
      - tdl
    depends_on:
      tasks-service:
        condition: service_started
      auth-service:
        condition: service_started
      message-broker:
        condition: service_healthy

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    volumes:
      - ./auth-service:/app
    ports:
      - 4444:80
    env_file:
      - ./auth-service/.env
    networks:
      - tdl
    depends_on:
      - user-db
      - message-broker
      - notification-service 

  match-service:
    build:
      context: match-service
      dockerfile: Dockerfile
    volumes:
      - ./match-service:/app
    ports:
      - 8000:80
    env_file:
      - ./match-service/.env
    networks:
      - tdl
    depends_on:
      match-db:
        condition: service_started
      message-broker:
        condition: service_healthy


  tasks-service:
    build:
      context: tasks-service
      dockerfile: Dockerfile
    volumes:
      - ./tasks-service:/app
    ports:
      - 3333:80
    env_file:
      - ./tasks-service/.env
    networks:
      - tdl
    depends_on:
      tasks-db:
        condition: service_started

  recommender-service:
    build:
      context: recommender-service
      dockerfile: Dockerfile
    volumes:
      - ./recommender-service:/app
    ports:
      - 5555:80
    env_file:
      - ./recommender-service/.env
    networks:
      - tdl
    depends_on:
      recommender-db:
        condition: service_started
      message-broker:
        condition: service_healthy

  usermanagement-service:
    build:
      context : usermanagement-service
      dockerfile: Dockerfile
    volumes:
      - ./usermanagement-service:/app
    ports:
      - 6666:6666
    env_file:
      - ./usermanagement-service/.env
    networks:
      - tdl
    depends_on:
      message-broker:
        condition: service_healthy
      user-db :
        condition : service_started

  streamlit-app:
      build: ./streamlit-app
      ports:
        - "8501:8501"
      networks:
        - tdl
      depends_on:
        message-broker:
          condition: service_healthy
        gateway-service:
          condition: service_started
  
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    volumes:
      - ./notification-service:/app
    ports:
      - 8081:80 
    env_file:
      - ./notification-service/.env
    networks:
      - tdl
    depends_on:
      message-broker:
        condition: service_healthy  

networks:
  tdl:
    driver: bridge