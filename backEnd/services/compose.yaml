services:

  recommender-db:
    image: postgres
    env_file:
      - ./recommender-db/.env
    volumes:
      - ./recommender-db/sql:/docker-entrypoint-initdb.d
    networks:
      - tdl

  tasks-db:
    image: postgres
    env_file:
      - ./tasks-db/.env
    volumes:
      - ./tasks-db/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tdl

  user-db:
    image: postgres
    env_file:
      - ./user-db/.env
    volumes:
      - ./user-db/sql:/docker-entrypoint-initdb.d
    networks:
      - tdl

  adminer:
    container_name: adminer
    image: adminer
    env_file:
      - ./adminer/.env
    ports:
      - 8080:8080
    networks:
      - tdl

  message-broker:
    image: rabbitmq:management
    container_name: message-broker
    env_file:
      - ./message-broker/.env
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./message-broker/data:/var/lib/rabbitmq
      - ./message-broker/log:/var/log/rabbitmq
      - ./message-broker/rabbitmq_data:/var/lib/rabbitmq
    networks:
      - tdl

  gateway-service:
    build:
      context: gateway-service
      dockerfile: Dockerfile
    volumes:
      - ./gateway-service:/app
    ports:
      - 3000:80
    env_file:
      - ./gateway-service/.env
    networks:
      - tdl
    depends_on:
      tasks-service:
        condition: service_started
      auth-service:
        condition: service_started
      message-broker:
        condition: service_healthy

  auth-service:
    build:
      context: auth-service
      dockerfile: Dockerfile
    volumes:
      - ./auth-service:/app
    ports:
      - 4444:80
    env_file:
      - ./auth-service/.env
    networks:
      - tdl
    depends_on:
      user-db:
        condition: service_started
      message-broker:
        condition: service_healthy

  tasks-service:
    build:
      context: tasks-service
      dockerfile: Dockerfile
    volumes:
      - ./tasks-service:/app
    ports:
      - 3333:80
    env_file:
      - ./tasks-service/.env
    networks:
      - tdl
    depends_on:
      tasks-db:
        condition: service_started

  recommender-service:
    build:
      context: recommender-service
      dockerfile: Dockerfile
    volumes:
      - ./recommender-service:/app
    ports:
      - 5555:80
    env_file:
      - ./recommender-service/.env
    networks:
      - tdl
    depends_on:
      recommender-db:
        condition: service_started
      message-broker:
        condition: service_healthy

  
      

  usermanagement-service:
    build:
      context : usermanagement-service
      dockerfile: Dockerfile
    volumes:
      - ./usermanagement-service:/app
    ports:
      - 6666:6666
    env_file:
      - ./usermanagement-service/.env
    networks:
      - tdl
    depends_on:
      message-broker:
        condition: service_healthy
      user-db :
        condition : service_started

networks:
  tdl:
    driver: bridge


# services:
#   gateway-service:
#     build:
#       context: gateway-service
#       dockerfile: Dockerfile
#     volumes:
#       - ./gateway-service:/app
#     ports:
#       - 3000:80
#     env_file:
#       - ./gateway-service/.env
#     networks:
#       - tdl
#     depends_on:
#       tasks-service:
#         condition: service_started
#       auth-service:
#         condition: service_started
#       message-broker:
#         condition: service_healthy

#   auth-service:
#     build:
#       context: auth-service
#       dockerfile: Dockerfile
#     volumes:
#       - ./auth-service:/app
#     ports:
#       - 4444:80
#     env_file:
#       - ./auth-service/.env
#     networks:
#       - tdl
#     depends_on:
#       auth-db:
#         condition: service_started
#       message-broker:
#         condition: service_healthy

#   tasks-service:
#     build:
#       context: tasks-service
#       dockerfile: Dockerfile
#     volumes:
#       - ./tasks-service:/app
#     ports:
#       - 3333:80
#     env_file:
#       - ./tasks-service/.env
#     networks:
#       - tdl
#     depends_on:
#       tasks-db:
#         condition: service_started

#     recommender-service:
#       build:
#         context: recommender-service
#         dockerfile: Dockerfile
#       volumes:
#         - ./recommender-service:/app
#       ports:
#         - 5555:80
#       env_file:
#         - ./recommender-service/.env
#       networks:
#         - tdl
#       depends_on:
#         auth-db:
#           condition: service_started
#         message-broker:
#           condition: service_healthy


#   # ws:
#   #   image: node:alpine
#   #   command: sh -c "npm i && npm run dev"
#   #   working_dir: /usr/src/app
#   #   volumes:
#   #     - ./ws:/usr/src/app
#   #   ports:
#   #     - 3080:3000
#   #   env_file:
#   #     - ./ws/.env
#   #   depends_on:
#   #     message-broker:
#   #       condition: service_healthy
#   #   networks:
#   #     - tdl

#   auth-db:
#     image: postgres
#     env_file:
#       - ./auth-db/.env
#     volumes:
#       # - ./auth-db/data:/var/lib/postgresql/data
#       - ./auth-db/sql:/docker-entrypoint-initdb.d
#     networks:
#       - tdl

#     recommender-db:
#       image: postgres
#       env_file:
#         - ./auth-db/.env
#       volumes:
#         # - ./auth-db/data:/var/lib/postgresql/data
#         - ./recommender-db/sql:/docker-entrypoint-initdb.d
#       networks:
#         - tdl

#   tasks-db:
#     image: postgres
#     env_file:
#       - ./tasks-db/.env
#     volumes:
#       #- ./tasks-db/data:/var/lib/mysql
#       #- ./tasks-db/sql:/docker-entrypoint-initdb.d
#       - ./tasks-db/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
#     networks:
#       - tdl

#   message-broker:
#     image: rabbitmq
#     env_file:
#       - ./message-broker/.env
#     healthcheck:
#       test: rabbitmq-diagnostics -q ping
#       interval: 10s
#       timeout: 10s
#       retries: 3
#     ports:
#       - 5673:5672
#       - 15673:15672
#     volumes:
#       - ./message-broker/data/:/var/lib/rabbitmq/
#       - ./message-broker/log/:/var/log/rabbitmq
#     networks:
#       - tdl

#   adminer:
#     container_name: adminer
#     image: adminer
#     env_file:
#       - ./adminer/.env
#     ports:
#       - 8080:8080
#     networks:
#       - tdl

# networks:
#   tdl:
#     driver: bridge


  # message-broker:
  #   image: rabbitmq
  #   env_file:
  #     - ./message-broker/.env
  #   healthcheck:
  #     test: rabbitmq-diagnostics -q ping
  #     interval: 10s
  #     timeout: 10s
  #     retries: 3
  #   ports:
  #     - 5673:5672
  #     - 15673:15672
  #   volumes:
  #     - ./message-broker/data/:/var/lib/rabbitmq/
  #     - ./message-broker/log/:/var/log/rabbitmq
  #   networks:
  #     - tdl
